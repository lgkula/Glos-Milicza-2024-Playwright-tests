name: Playwright Tests Cache
on:
    workflow_dispatch:
    schedule:
        - cron: '0 */2 * * *'
    push:
        branches: [master]
    pull_request:
        branches: [master]
jobs:
    test:
        timeout-minutes: 60
        runs-on: ubuntu-latest
        container:
            image: mcr.microsoft.com/playwright:v1.42.1-jammy
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-node@v4
              with:
                  node-version: '18.x'
            - name: Cache Node Modules
              uses: actions/cache@v3
              with:
                path: ~/.npm
                key: node-modules-${{ hashFiles('package-lock.json') }}

            - name: Install Dependencies
              run: npm ci

            - name: Store Playwright's Version
              run: |
                PLAYWRIGHT_VERSION=$(npm ls @playwright/test | grep @playwright | sed 's/.*@//')
                echo "Playwright's Version: $PLAYWRIGHT_VERSION"
                echo "PLAYWRIGHT_VERSION=$PLAYWRIGHT_VERSION" >> $GITHUB_ENV

            - name: Cache Playwright Browsers for Playwright's Version
              id: cache-playwright-browsers
              uses: actions/cache@v3
              with:
                path: ~/.cache/ms-playwright
                key: playwright-browsers-${{ env.PLAYWRIGHT_VERSION }}

            - name: Setup Playwright
              if: steps.cache-playwright-browsers.outputs.cache-hit != 'true'
              run: npx playwright install --with-deps
            # - name: Get installed Playwright version
            #   id: playwright-version
            #   run: echo "PLAYWRIGHT_VERSION=$(node -e "console.log(require('./package-lock.json').dependencies['@playwright/test'].version)")" >> $GITHUB_ENV
            # - name: Cache playwright binaries
            #   uses: actions/cache@v3
            #   id: playwright-cache
            #   with:
            #     path: |
            #       ~/.cache/ms-playwright
            #     key: ${{ runner.os }}-playwright-${{ env.PLAYWRIGHT_VERSION }}
            # - name: Install dependencies
            #   run: npm ci
            # - run: npx playwright install --with-deps
            #   if: steps.playwright-cache.outputs.cache-hit != 'true'
            # - run: npx playwright install-deps
            #   if: steps.playwright-cache.outputs.cache-hit != 'true'
            - name: Run Playwright tests on stage
              run: npx playwright test
            - uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30
            - name: Run Playwright tests on prod
              run: env ENV=Prod npx playwright test
            - uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: playwright-report
                  path: playwright-report/
                  retention-days: 30
